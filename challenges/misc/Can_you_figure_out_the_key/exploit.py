from string import ascii_lowercase
from hashlib import md5
from itertools import product
from random import choices


def sign(message, key):
    """ Our new keyed-hash message authentication algorithm! So much more simpler than HMAC! """
    return md5((key + message).encode()).hexdigest()


def verify(signed, key):
    """ Verifies if message is signed by key """
    try:
        message, signature = signed.split(".")
        return sign(message, key) == signature
    except:
        return False


# Define keyspace and key_length for option 3
keyspace = ascii_lowercase
key_length = 5

# Generate list of all possible 5-letter keys from the keyspace for option 3
all_keys = [''.join(key) for key in product(keyspace, repeat=key_length)]

# Generate a random key for option 4
key = "".join(choices(ascii_lowercase, k=5))

# Define passphrase for option 4
PASSPHRASE = "Better than HMAC!"

print(
    "Welcome to our new signing service!\n"
    "Our service is extremely secure, feel free to try and break it >:D"
)

while True:
    print(
        "\nOptions:\n"
        "1. Sign messages\n"
        "2. Verify messages\n"
        "3. Input signed messages to find key\n"
        "4. Input key to find signed passphrase\n"
        "5. Exit\n"
    )

    option = input(f"Enter option: ")

    if option == "1":
        message = input("Enter message: ")
        if message == PASSPHRASE:
            print("Indeed! Our new algorithm runs much faster than HMAC :)")
        elif message:
            signed = f"{message}.{sign(message, key)}"
            print(f"Here's your signed message: {signed}")
        else:
            print("No message to sign ¯\_(ツ)_/¯")

    elif option == "2":
        signed = input("Enter signed message: ")
        if verify(signed, key):
            print("Message verified!")
            try:
                if signed.split(".")[0] == PASSPHRASE:
                    with open("flag.txt") as f:
                        flag = f.read()
                        print(flag)
            except:
                print("Flag is missing!")
        else:
            print("Message verification failed!")

    elif option == "3":
        signed_message = input("Enter signed message: ")
        found_key = None
        print("Starting reverse check...")
        for key in all_keys:
            if verify(signed_message, key):
                found_key = key
                break

        if found_key:
            print(f"Key found: {found_key}")
        else:
            print("No key found.")

    elif option == "4":
        input_key = input("Enter key: ")
        signed_passphrase = f"{PASSPHRASE}.{sign(PASSPHRASE, input_key)}"
        print(
            f"Here's the signed passphrase for the input key: {signed_passphrase}")

    elif option == "5":
        print("Thanks for using our service. Goodbye!")
        break

    else:
        print("Invalid option. Please choose an option from 1 to 5!")
