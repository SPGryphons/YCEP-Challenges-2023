SECTION .data
flag        db  0x59, 0x43, 0x45, 0x50, 0x32, 0x30, 0x32, 0x33, 0x7B, 0x74, 0x68, 0x69, 0x73, 0x5F, 0x69, 0x73
            db  0x5F, 0x64, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x65, 0x6C, 0x79, 0x5F, 0x61, 0x5F, 0x66, 0x61
            db  0x6B, 0x65, 0x5F, 0x66, 0x6C, 0x61, 0x67, 0x7D, 0x00
shifts      dd  0x1f, 0x2a, 0x3d, 0x4c, 0x5e, 0x6b, 0x7f, 0x8a, 0x9d, 0xa8, 0xb1, 0xc2, 0xd5, 0xe0, 0xf3, 0x0c
            dd  0x1f, 0x2a, 0x3d, 0x4c, 0x5e, 0x6b, 0x7f, 0x8a, 0x9d, 0xa8, 0xb1, 0xc2, 0xd5, 0xe0, 0xf3, 0x0c
            dd  0x1f, 0x2a, 0x3d, 0x4c, 0x5e, 0x6b, 0x7f, 0x8a, 0x9d, 0xa8, 0xb1, 0xc2, 0x00, 0x00, 0x00, 0x00
scraps_file db  "scraps.bin",0

SECTION .bss
SECTION .text
global _start

_start:
    mov eax, 4     
    mov ebx, 1     
    lea ecx, [flag]
    mov edx, 44    
    int 0x80

    xor esi, esi

shift_loop:
    cmp esi, 44         
    jnb write_flag
    mov eax, [esi*4+shifts]      
    add al, [esi+flag]           
    mov [esi+flag], al
    inc esi
    jmp shift_loop

write_flag:
    mov eax, 4          
